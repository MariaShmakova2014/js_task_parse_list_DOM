{"version":3,"sources":["scripts/main.js"],"names":["ulList","document","querySelector","liList","querySelectorAll","sortList","list","persons","sort","personA","personB","getSalary","newList","createElement","person","insertAdjacentHTML","dataset","position","salary","age","innerText","replaceWith","salaryString","parseFloat","replace","getEmployees","result","map","personSummary","name","trim","push"],"mappings":";AAAA,aAmDA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAjDA,IAAMA,EAASC,SAASC,cAAc,MAChCC,EAASH,EAAOI,iBAAiB,MAEvC,SAASC,EAASC,GACVC,IADgB,EAChBA,EAAU,EAAID,GAAME,KAAK,SAACC,EAASC,GACvCC,OAAAA,EAAUF,GAAWE,EAAUD,KAE3BE,EAAUX,SAASY,cAAc,MAElBN,EAAAA,EAAAA,GANC,IAMQ,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAnBO,IAAAA,EAAmB,EAAA,MAC5BF,EAAQG,mBAAmB,YAELD,wCAAAA,OAAAA,EAAOE,QAAQC,SACnBH,0BAAAA,OAAAA,EAAOE,QAAQE,OAClBJ,uBAAAA,OAAAA,EAAOE,QAAQG,IAExBL,uBAAAA,OAAAA,EAAOM,UANb,uBAPoB,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAkBtBpB,EAAOqB,YAAYT,GAGrB,SAASD,EAAUG,GACXQ,IAAAA,EAAeR,EAAOE,QAAQE,OAE7BK,OAAAA,WAAWD,EAAaE,QAAQ,QAAS,KAGlD,SAASC,EAAanB,GACdoB,IAAAA,EAAS,GAaRA,OAXHpB,EAAAA,GAAMqB,IAAI,SAAAb,GACNc,IAAAA,EAAgB,CACpBC,KAAMf,EAAOM,UAAUU,OACvBb,SAAUH,EAAOE,QAAQC,SACzBC,OAAQJ,EAAOE,QAAQE,OACvBC,IAAKL,EAAOE,QAAQG,KAGtBO,EAAOK,KAAKH,KAGPF,EAGTrB,EAASF,GAETsB,EAAatB","file":"main.85d8a662.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst ulList = document.querySelector('ul');\nconst liList = ulList.querySelectorAll('li');\n\nfunction sortList(list) {\n  const persons = [...list].sort((personA, personB) =>\n    getSalary(personA) - getSalary(personB));\n\n  const newList = document.createElement('ul');\n\n  for (const person of persons) {\n    newList.insertAdjacentHTML('beforeend', `\n      <li\n        data-position = ${person.dataset.position}\n        data-salary=${person.dataset.salary}\n        data-age=${person.dataset.age}\n      >\n        ${person.innerText}\n      </li>\n  `);\n  }\n\n  ulList.replaceWith(newList);\n}\n\nfunction getSalary(person) {\n  const salaryString = person.dataset.salary;\n\n  return parseFloat(salaryString.replace(/[$,]/g, ''));\n}\n\nfunction getEmployees(list) {\n  const result = [];\n\n  [...list].map(person => {\n    const personSummary = {\n      name: person.innerText.trim(),\n      position: person.dataset.position,\n      salary: person.dataset.salary,\n      age: person.dataset.age,\n    };\n\n    result.push(personSummary);\n  });\n\n  return result;\n}\n\nsortList(liList);\n\ngetEmployees(liList);\n"]}